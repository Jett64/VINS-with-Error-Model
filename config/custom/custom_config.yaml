%YAML:1.0

#common parameters
imu_topic: "/camera/imu"
image_topic: "/v4l2_camera/image_raw"  #/camera/color/image_raw      /v4l2_camera/image_raw1
output_path: "/home/Jett64/catkin_folder/catkin_ws_VINS-with-Error-Model/output"

#camera calibration 
model_type: MEI
camera_name: camera

image_width: 960
image_height: 540
mirror_parameters:
   xi: 1.88231281
distortion_parameters:
   k1: -0.14687332
   k2: 0.51143446
   p1: 0.00121549
   p2: 0.0002649
projection_parameters:
   gamma1: 1271.77890976
   gamma2: 1280.9989736
   u0: 485.16201753
   v0: 270.88980645

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam

# v4l2_default_new
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.99954871, -0.02579835,  0.01538872, 
                -0.01542594, -0.00124437,  0.99988024,
               -0.02577611, -0.99966639, -0.00164177]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.01284145, 0.02231241, 0.03969852]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1          # ransac threshold (pixel); 一个数据点被判定为内点（inlier）的最大残差（residual）
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 1              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.08  # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time #10
keyframe_parallax: 15.0 # keyframe selection threshold (pixel) #15

#imu parameters  old n + 40X new
acc_n: 9.2201844120907945e-02      
gyr_n: 1.8069770656653671e-02   
acc_w: 2.8372140527714427e-03
gyr_w: 6.048084336078554e-04
g_norm: 9.794     # gravity magnitude 9.794

#loop closure parameters
loop_closure: 1                    # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/Jett64/catkin_folder/catkin_ws_VINS-with-Error-Model/output/pose_graph" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.04                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0.008               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
